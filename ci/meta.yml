meta:
  resources:
    - name: ecr-resource
      type: registry-image-resource
      source:
        repository: unset
        aws_region: ((dataworks.aws_region))
        aws_role_arn: arn:aws:iam::((dataworks.aws_management_dev_acc)):role/ci
        aws_access_key_id: ((dataworks-secrets.ci_aws_access_key_id))
        aws_secret_access_key: ((dataworks-secrets.ci_aws_secret_access_key))
  plan:
    terraform-common-config:
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: ((dataworks.terraform_repository))
            tag: ((dataworks.terraform_13_version))
        params:
          TF_INPUT: false
          TF_CLI_ARGS_apply: -lock-timeout=300s
          TF_CLI_ARGS_plan: -lock-timeout=300s
          TF_VAR_costcode: ((dataworks.costcode))
    terraform-bootstrap:
      task: terraform-bootstrap
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: dwpdigital/jinja-yaml-aws
            version: 0.0.19
            tag: 0.0.19
        run:
          path: sh
          args:
            - -exc
            - |
              python bootstrap_terraform.py
              cp terraform.tf ../terraform-bootstrap
          dir: docker-aviator
        inputs:
          - name: docker-aviator
        outputs:
          - name: terraform-bootstrap
    terraform-apply:
      task: terraform-apply
      .: (( inject meta.plan.terraform-common-config ))
      config:
        run:
          path: sh
          args:
            - -exc
            - |
              cp ../terraform-bootstrap/terraform.tf .
              terraform workspace show
              terraform init
              terraform plan -out terraform.plan
              terraform apply -auto-approve terraform.plan
          dir: docker-aviator
        inputs:
          - name: docker-aviator
          - name: terraform-bootstrap
    terraform-plan:
      task: terraform-plan
      .: (( inject meta.plan.terraform-common-config ))
      config:
        run:
          path: sh
          args:
            - -exc
            - |
              cp ../terraform-bootstrap/terraform.tf .
              terraform workspace show
              terraform init
              terraform plan $DETAILED_EXITCODE
          dir: docker-aviator
        inputs:
          - name: docker-aviator
          - name: terraform-bootstrap
      params:
        DETAILED_EXITCODE: -detailed-exitcode
